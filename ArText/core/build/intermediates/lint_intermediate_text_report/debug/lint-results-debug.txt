/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/build.gradle:56: Warning: A newer version of com.google.ar:core than 1.31.0 is available: 1.32.0 [GradleDependency]
    api "com.google.ar:core:$arcore_version"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/build.gradle:59: Warning: A newer version of androidx.annotation:annotation than 1.3.0 is available: 1.4.0 [GradleDependency]
    implementation "androidx.annotation:annotation:$annotation_version"
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/build.gradle:60: Warning: A newer version of androidx.lifecycle:lifecycle-runtime-ktx than 2.4.1 is available: 2.5.0 [GradleDependency]
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx_version"
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/Light.java:12: Warning: The API level is already known to be at least 24 from the minSdkVersion [SupportAnnotationUsage]
@RequiresApi(api = Build.VERSION_CODES.N)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/Material.java:27: Warning: The API level is already known to be at least 24 from the minSdkVersion [SupportAnnotationUsage]
@RequiresApi(api = Build.VERSION_CODES.N)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/MaterialFactory.java:10: Warning: The API level is already known to be at least 24 from the minSdkVersion [SupportAnnotationUsage]
@RequiresApi(api = Build.VERSION_CODES.N)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/ModelRenderable.java:20: Warning: The API level is already known to be at least 24 from the minSdkVersion [SupportAnnotationUsage]
@RequiresApi(api = Build.VERSION_CODES.N)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/Renderer.java:78: Warning: The API level is already known to be at least 24 from the minSdkVersion [SupportAnnotationUsage]
    @RequiresApi(api = Build.VERSION_CODES.N)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/ShapeFactory.java:16: Warning: The API level is already known to be at least 24 from the minSdkVersion [SupportAnnotationUsage]
@RequiresApi(api = Build.VERSION_CODES.N)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/Texture.java:23: Warning: The API level is already known to be at least 24 from the minSdkVersion [SupportAnnotationUsage]
@RequiresApi(api = Build.VERSION_CODES.N)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/ViewRenderable.java:38: Warning: The API level is already known to be at least 24 from the minSdkVersion [SupportAnnotationUsage]
@RequiresApi(api = Build.VERSION_CODES.N)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "SupportAnnotationUsage":
   This lint check makes sure that the support annotations (such as @IntDef
   and @ColorInt) are used correctly. For example, it's an error to specify an
   @IntRange where the from value is higher than the to value.

/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/utilities/AndroidPreconditions.java:68: Warning: Unnecessary; SDK_INT is always >= 24 [ObsoleteSdkInt]
    return !isAndroidApiAvailable() || (Build.VERSION.SDK_INT >= VERSION_CODES.LOLLIPOP);
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/Light.java:12: Warning: Unnecessary; SDK_INT is always >= 24 [ObsoleteSdkInt]
@RequiresApi(api = Build.VERSION_CODES.N)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/utilities/LoadHelper.java:179: Warning: Unnecessary; SDK_INT is always >= 24 [ObsoleteSdkInt]
        if (VERSION.SDK_INT >= VERSION_CODES.ICE_CREAM_SANDWICH) {
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/Material.java:27: Warning: Unnecessary; SDK_INT is always >= 24 [ObsoleteSdkInt]
@RequiresApi(api = Build.VERSION_CODES.N)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/MaterialFactory.java:10: Warning: Unnecessary; SDK_INT is always >= 24 [ObsoleteSdkInt]
@RequiresApi(api = Build.VERSION_CODES.N)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/ModelRenderable.java:20: Warning: Unnecessary; SDK_INT is always >= 24 [ObsoleteSdkInt]
@RequiresApi(api = Build.VERSION_CODES.N)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/Renderer.java:78: Warning: Unnecessary; SDK_INT is always >= 24 [ObsoleteSdkInt]
    @RequiresApi(api = Build.VERSION_CODES.N)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/SequentialTask.java:15: Warning: Unnecessary; SDK_INT is always >= 24 [ObsoleteSdkInt]
@TargetApi(24)
~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/ShapeFactory.java:16: Warning: Unnecessary; SDK_INT is always >= 24 [ObsoleteSdkInt]
@RequiresApi(api = Build.VERSION_CODES.N)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/Texture.java:23: Warning: Unnecessary; SDK_INT is always >= 24 [ObsoleteSdkInt]
@RequiresApi(api = Build.VERSION_CODES.N)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/ViewRenderable.java:38: Warning: Unnecessary; SDK_INT is always >= 24 [ObsoleteSdkInt]
@RequiresApi(api = Build.VERSION_CODES.N)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ObsoleteSdkInt":
   This check flags version checks that are not necessary, because the
   minSdkVersion (or surrounding known API level) is already at least as high
   as the version checked for.

   Similarly, it also looks for resources in -vNN folders, such as values-v14
   where the version qualifier is less than or equal to the minSdkVersion,
   where the contents should be merged into the best folder.

/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/res/raw/ar_environment_material_depth.filamat: Warning: The resource R.raw.ar_environment_material_depth appears to be unused [UnusedResources]
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/res/raw/ar_environment_material_flat.filamat: Warning: The resource R.raw.ar_environment_material_flat appears to be unused [UnusedResources]
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/res/raw/sceneform_camera_material.filamat: Warning: The resource R.raw.sceneform_camera_material appears to be unused [UnusedResources]
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/res/raw/sceneform_default_light_probe.sfb: Warning: The resource R.raw.sceneform_default_light_probe appears to be unused [UnusedResources]
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/res/raw/sceneform_opaque_colored_material.filamat: Warning: The resource R.raw.sceneform_opaque_colored_material appears to be unused [UnusedResources]
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/res/raw/sceneform_opaque_textured_material.filamat: Warning: The resource R.raw.sceneform_opaque_textured_material appears to be unused [UnusedResources]
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/res/drawable/sceneform_plane.png: Warning: The resource R.drawable.sceneform_plane appears to be unused [UnusedResources]
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/res/raw/sceneform_plane_material.filamat: Warning: The resource R.raw.sceneform_plane_material appears to be unused [UnusedResources]
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/res/raw/sceneform_plane_shadow_material.filamat: Warning: The resource R.raw.sceneform_plane_shadow_material appears to be unused [UnusedResources]
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/res/raw/sceneform_transparent_colored_material.filamat: Warning: The resource R.raw.sceneform_transparent_colored_material appears to be unused [UnusedResources]
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/res/raw/sceneform_transparent_textured_material.filamat: Warning: The resource R.raw.sceneform_transparent_textured_material appears to be unused [UnusedResources]
/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/res/raw/sceneform_view_material.filamat: Warning: The resource R.raw.sceneform_view_material appears to be unused [UnusedResources]

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.

   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests=true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests=true.

/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/res/drawable/sceneform_plane.png: Warning: Found bitmap drawable res/drawable/sceneform_plane.png in densityless folder [IconLocation]

   Explanation for issues of type "IconLocation":
   The res/drawable folder is intended for density-independent graphics such
   as shapes defined in XML. For bitmaps, move it to drawable-mdpi and
   consider providing higher and lower resolution versions in drawable-ldpi,
   drawable-hdpi and drawable-xhdpi. If the icon really is density independent
   (for example a solid color) you can place it in drawable-nodpi.

   https://developer.android.com/guide/practices/screens_support.html

/Users/james/Documents/Avalia-HEIG/Projets/sceneform-android/core/src/main/java/com/google/ar/sceneform/rendering/RenderViewToExternalTexture.java:35: Warning: Custom view RenderViewToExternalTexture is missing constructor used by tools: (Context) or (Context,AttributeSet) or (Context,AttributeSet,int) [ViewConstructor]
class RenderViewToExternalTexture extends LinearLayout {
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ViewConstructor":
   Some layout tools (such as the Android layout editor) need to find a
   constructor with one of the following signatures:
   * View(Context context)
   * View(Context context, AttributeSet attrs)
   * View(Context context, AttributeSet attrs, int defStyle)

   If your custom view needs to perform initialization which does not apply
   when used in a layout editor, you can surround the given code with a check
   to see if View#isInEditMode() is false, since that method will return false
   at runtime but true within a user interface editor.

0 errors, 36 warnings
